<html>
<head>
<title>A Perl Module Advent Calendar</title></head>
<body bgcolor="#281093" text="white" link="yellow" vlink="yellow">





<p><img src="../../images/2000/14th.jpg" alt="14th" border="0" width="100" height="75">
<hr>




<A NAME="__index__"></A>
<!-- INDEX BEGIN -->

<UL>

	<LI><A HREF="#name">NAME</A></LI>
	<LI><A HREF="#synopsis">SYNOPSIS</A></LI>
	<LI><A HREF="#description">DESCRIPTION</A></LI>
	<LI><A HREF="#author">AUTHOR</A></LI>
	<LI><A HREF="#see also">SEE ALSO</A></LI>
</UL>
<!-- INDEX END -->

<HR>
<P>
<H1><A NAME="name">NAME</A></H1>
<P>XML::Grove - simple, non-validating XML objects</P>
<P>
<HR>
<H1><A NAME="synopsis">SYNOPSIS</A></H1>
<PRE>
 use XML::Parser;
 use XML::Parser::Grove;
 use XML::Grove;</PRE>
<PRE>
 $parser = XML::Parser-&gt;new(Style =&gt; 'grove');
 $grove = $parser-&gt;parsefile ($xml_file);</PRE>
<PRE>
 # All methods may also take a value to set the corresponding
 # property</PRE>
<PRE>
 # XML::Grove
 $root = $grove-&gt;root;            # the one element in `contents'
 $entities = $grove-&gt;entities;    # an array of entity defs
 $notations = $grove-&gt;notations;  # an array of notation defs
 $contents = $grove-&gt;contents;    # may include PIs and comments</PRE>
<PRE>
 # XML::Grove::Element
 $name = $element-&gt;name;
 $attributes = $element-&gt;attributes;    # a hash
 $contents = $element-&gt;contents;        # an array
 $value = $element-&gt;attr ($attr_name);  # an array or scalar</PRE>
<PRE>
 # XML::Grove::Entity
 $name = $entity-&gt;name;
 $data = $entity-&gt;data;</PRE>
<PRE>
 # XML::Grove::PI
 $target = $pi-&gt;target;
 $data = $pi-&gt;data;</PRE>
<PRE>
 # XML::Grove::Comment
 $data = $comment-&gt;data;</PRE>
<P>
<HR>
<H1><A NAME="description">DESCRIPTION</A></H1>
<P><CODE>XML::Grove</CODE> provides simple objects for parsed XML documents.  The
objects may be modified but no checking is performed by <CODE>XML::Grove</CODE>.
<CODE>XML::Grove</CODE> objects do not include parsing information such as
character positions or type of tags used.</P>
<P>The `<CODE>contents</CODE>' of an XML::Grove contains the root element possibly
intermixed with processing instructions (PIs) or comments.</P>
<P>The `<CODE>contents</CODE>' of an XML::Grove::Element may contain elements
(XML::Grove::Element), character data (Perl scalars), entity
references (TBD, classes of XML::Grove::Entity), character references
(TBD), processing instructions (XML::Grove::PI), and comments
(XML::Grove::Comment).</P>
<P>The `<CODE>attributes</CODE>' of an XML::Grove::Element is an hash keyed by the
attribute name, each attribute is either an array that may contain
Perl scalars and entity references, or simply a Perl scalar.</P>
<P>To Be Determined (TBD): XML::Grove will be expanded to support
additional objects and features of XML::Parser and SGML::SP::Generic
as they become available.  XML::Grove is intended to remain a simple
module, other modules will be used to, for example, provide more
parsing info, perform validation while modifying, or be able to write
the same file that was read.  XML::Grove and SGML::Grove should be
nearly interchangeable.</P>
<P>
<HR>
<H1><A NAME="author">AUTHOR</A></H1>
<P>Ken MacLeod, <A HREF="mailto:ken@bitsko.slc.ut.us">ken@bitsko.slc.ut.us</A></P>
<P>
<HR>
<H1><A NAME="see also">SEE ALSO</A></H1>
<P>perl(1), XML::Parser(3), XML::Parser::Grove(3).</P>
<P>Extensible Markup Language (XML) &lt;http://www.w3c.org/XML&gt;</P>


</body>
</html>
